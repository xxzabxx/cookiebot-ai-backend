version: '3.8'

services:
  # Main application
  app:
    build:
      context: .
      target: development
    ports:
      - "5000:5000"
    environment:
      - FLASK_ENV=development
      - DATABASE_URL=postgresql://cookiebot:password@db:5432/cookiebot_ai
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/2
    volumes:
      - .:/app
      - /app/__pycache__
    depends_on:
      - db
      - redis
    networks:
      - cookiebot-network

  # PostgreSQL database
  db:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=cookiebot_ai
      - POSTGRES_USER=cookiebot
      - POSTGRES_PASSWORD=password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init_db.sql:/docker-entrypoint-initdb.d/init_db.sql
    ports:
      - "5432:5432"
    networks:
      - cookiebot-network

  # Redis for caching and background tasks
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - cookiebot-network

  # Celery worker for background tasks
  celery:
    build:
      context: .
      target: development
    command: celery -A app.celery worker --loglevel=info
    environment:
      - FLASK_ENV=development
      - DATABASE_URL=postgresql://cookiebot:password@db:5432/cookiebot_ai
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/2
    volumes:
      - .:/app
    depends_on:
      - db
      - redis
    networks:
      - cookiebot-network

  # Celery beat for scheduled tasks
  celery-beat:
    build:
      context: .
      target: development
    command: celery -A app.celery beat --loglevel=info
    environment:
      - FLASK_ENV=development
      - DATABASE_URL=postgresql://cookiebot:password@db:5432/cookiebot_ai
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/2
    volumes:
      - .:/app
    depends_on:
      - db
      - redis
    networks:
      - cookiebot-network

  # Nginx reverse proxy (for production)
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - app
    networks:
      - cookiebot-network
    profiles:
      - production

volumes:
  postgres_data:
  redis_data:

networks:
  cookiebot-network:
    driver: bridge

